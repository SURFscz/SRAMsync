"""
This type stub file was generated by pyright.
"""

from collections.abc import MutableMapping

"""
This is a convenience wrapper for dictionaries
returned from LDAP servers containing attribute
names of variable case.

See https://www.python-ldap.org/ for details.
"""
class cidict(MutableMapping):
   """
    Case-insensitive but case-respecting dictionary.
    """
   __slots__ = ...
   def __init__(self, default=...) -> None:
      ...
   
   def __getitem__(self, key):
      ...
   
   def __setitem__(self, key, value): # -> None:
      ...
   
   def __delitem__(self, key): # -> None:
      ...
   
   def __iter__(self): # -> Iterator[Any]:
      ...
   
   def __len__(self): # -> int:
      ...
   
   def __contains__(self, key): # -> bool:
      ...
   
   def clear(self): # -> None:
      ...
   
   def copy(self): # -> Self:
      ...
   
   __copy__ = ...
   def has_key(self, key): # -> bool:
      """Compatibility with python-ldap 2.x"""
      ...
   
   @property
   def data(self): # -> dict[Any, Any]:
      """Compatibility with older IterableUserDict-based implementation"""
      ...
   


def strlist_minus(a, b): # -> list[Any]:
   """
  Return list of all items in a which are not in b (a - b).
  a,b are supposed to be lists of case-insensitive strings.
  """
   ...

def strlist_intersection(a, b): # -> list[Any]:
   """
  Return intersection of two lists of case-insensitive strings a,b.
  """
   ...

def strlist_union(a, b): # -> ValuesView[Any]:
   """
  Return union of two lists of case-insensitive strings a,b.
  """
   ...

